/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Drainer,
  DrainerInterface,
} from "../../../../src/mocks/drainerContract.sol/Drainer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "victim",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cycles",
        type: "uint256",
      },
    ],
    name: "drain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101c8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b184be8114610030575b600080fd5b61004361003e3660046100ee565b610045565b005b60005b818110156100e9576040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526001602482015273ffffffffffffffffffffffffffffffffffffffff8416906340c10f1990604401600060405180830381600087803b1580156100be57600080fd5b505af11580156100d2573d6000803e3d6000fd5b5050505080806100e190610133565b915050610048565b505050565b6000806040838503121561010157600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461012557600080fd5b946020939093013593505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361018b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122054f59bcd7de66c9e5adbc7dcb5349ac0705afbe903f0e17035db11c78968d54964736f6c63430008140033";

type DrainerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DrainerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Drainer__factory extends ContractFactory {
  constructor(...args: DrainerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Drainer> {
    return super.deploy(overrides || {}) as Promise<Drainer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Drainer {
    return super.attach(address) as Drainer;
  }
  override connect(signer: Signer): Drainer__factory {
    return super.connect(signer) as Drainer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DrainerInterface {
    return new utils.Interface(_abi) as DrainerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Drainer {
    return new Contract(address, _abi, signerOrProvider) as Drainer;
  }
}
