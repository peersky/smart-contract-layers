/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LayeredProxy,
  LayeredProxyInterface,
  LibAccessLayers,
} from "../../src/LayeredProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "layerAddess",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "beforeSig",
            type: "bytes4",
          },
          {
            internalType: "bytes4",
            name: "afterSig",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "layerConfigData",
            type: "bytes",
          },
        ],
        internalType: "struct LibAccessLayers.LayerStruct[]",
        name: "layers",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "initialImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "ERC1967InvalidAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProxyDeniedAdminAccess",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "BalanceReduced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526a084595161401484a0000006000553480156200002057600080fd5b5060405162001a7d38038062001a7d8339810160408190526200004391620005c2565b8083604051806020016040528060008152508281620000698282620000e560201b60201c565b5050816040516200007a90620004e4565b6001600160a01b039091168152602001604051809103906000f080158015620000a7573d6000803e3d6000fd5b506001600160a01b0316608052620000c8620000c260805190565b6200014b565b505050620000dc82620001bd60201b60201c565b50505062000943565b620000f0826200020c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156200013d576200013882826200028c565b505050565b6200014762000309565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200018d60008051602062001a5d833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001ba816200032b565b50565b60005b81518110156200014757620001f7828281518110620001e357620001e36200078d565b60200260200101516200036e60201b60201c565b806200020381620007a3565b915050620001c0565b806001600160a01b03163b6000036200024857604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002ab9190620007cb565b600060405180830381855af49150503d8060008114620002e8576040519150601f19603f3d011682016040523d82523d6000602084013e620002ed565b606091505b5090925090506200030085838362000454565b95945050505050565b3415620003295760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b0381166200035757604051633173bdd160e11b8152600060048201526024016200023f565b8060008051602062001a5d8339815191526200026b565b7f650fcebb359486b662eb1b0aa6a1d52f283f87f1ffcacdfb2b58744a08e075ae80546001810182556000829052825160029091027fda2a52c55025b17bec7d5eef42765efcfebc5e19591a1b3d775cf38f4689f236810180546020860151604087015160e090811c600160c01b0263ffffffff60c01b199290911c600160a01b026001600160c01b03199093166001600160a01b0390961695909517919091171692909217825560608401518492917fda2a52c55025b17bec7d5eef42765efcfebc5e19591a1b3d775cf38f4689f23701906200044d908262000877565b5050505050565b6060826200046d576200046782620004ba565b620004b3565b81511580156200048557506001600160a01b0384163b155b15620004b057604051639996b31560e01b81526001600160a01b03851660048201526024016200023f565b50805b9392505050565b805115620004cb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b61065d806200140083390190565b80516001600160a01b03811681146200050a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156200054a576200054a6200050f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200057b576200057b6200050f565b604052919050565b80516001600160e01b0319811681146200050a57600080fd5b60005b83811015620005b95781810151838201526020016200059f565b50506000910152565b600080600060608486031215620005d857600080fd5b620005e384620004f2565b60208501519093506001600160401b03808211156200060157600080fd5b818601915086601f8301126200061657600080fd5b8151818111156200062b576200062b6200050f565b6200063c60208260051b0162000550565b8082825260208201915060208360051b8601019250898311156200065f57600080fd5b602085015b838110156200076d578051858111156200067d57600080fd5b8601601f196080828e03820112156200069557600080fd5b6200069f62000525565b620006ad60208401620004f2565b8152620006bd6040840162000583565b6020820152620006d06060840162000583565b6040820152608083015188811115620006e857600080fd5b8084019350508d603f840112620006fe57600080fd5b6020830151888111156200071657620007166200050f565b62000729602084601f8401160162000550565b81815292506040848201018f10156200074157600080fd5b620007548160208501604087016200059c565b5060608101919091528452506020928301920162000664565b5080965050505050506200078460408501620004f2565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201620007c457634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251620007df8184602087016200059c565b9190910192915050565b600181811c90821680620007fe57607f821691505b6020821081036200081f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013857600081815260208120601f850160051c810160208610156200084e5750805b601f850160051c820191505b818110156200086f578281556001016200085a565b505050505050565b81516001600160401b038111156200089357620008936200050f565b620008ab81620008a48454620007e9565b8462000825565b602080601f831160018114620008e35760008415620008ca5750858301515b600019600386901b1c1916600185901b1785556200086f565b600085815260208120601f198616915b828110156200091457888601518255948401946001909101908401620008f3565b5085821015620009335787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610aa46200095c60003960005050610aa46000f3fe60806040523661000b57005b6000357fffffffff000000000000000000000000000000000000000000000000000000001633600036346000610044868686868661005e565b905061004e610181565b61005c8686868686866101c3565b005b7f650fcebb359486b662eb1b0aa6a1d52f283f87f1ffcacdfb2b58744a08e075ae80546060919060009067ffffffffffffffff8111156100a0576100a06105ce565b6040519080825280602002602001820160405280156100d357816020015b60608152602001906001900390816100be5790505b50905060005b8254811015610175576101458382815481106100f7576100f76105fd565b90600052602060002090600202018a8a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c925061026e915050565b828281518110610157576101576105fd565b6020026020010181905250808061016d9061065b565b9150506100d9565b50979650505050505050565b60008054908061019083610693565b90915550506000805460405190917fdffc9dd1471a42cc0ba7e7da40837a15d23dd78b4deeb820f07355a191ba6cff91a2565b7f650fcebb359486b662eb1b0aa6a1d52f283f87f1ffcacdfb2b58744a08e075ae60005b81548110156102645761025282826001858054905061020691906106c8565b61021091906106c8565b81548110610220576102206105fd565b90600052602060002090600202018989898989898881518110610245576102456105fd565b60200260200101516103e4565b8061025c8161065b565b9150506101e7565b5050505050505050565b8454604051606091600091829173ffffffffffffffffffffffffffffffffffffffff8116917401000000000000000000000000000000000000000090910460e01b906102c99060018c01908b908b908a908c9060240161082a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161035291906108a5565b6000604051808303816000865af19150503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e610394565b606091505b5091509150816103a382610561565b90610175576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db91906108c1565b60405180910390fd5b8654604051600091829173ffffffffffffffffffffffffffffffffffffffff8216917801000000000000000000000000000000000000000000000000900460e01b906104439060018d01908c908c908a908d908d908c906024016108db565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516104cc91906108a5565b6000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b50915091508161051d82610561565b90610555576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db91906108c1565b50505050505050505050565b80516060906044811015610585575050604080516020810190915260008152919050565b6004830180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301825290936105c590838101602001906024016109a3565b93525090919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361068c5761068c61062c565b5060010190565b6000816106a2576106a261062c565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b818103818111156106db576106db61062c565b92915050565b8054600090600181811c90808316806106fb57607f831692505b60208084108203610735577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b838852602088018280156107505760018114610784576107af565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008716825285151560051b820197506107af565b60008981526020902060005b878110156107a957815484820152908601908401610790565b83019850505b5050505050505092915050565b60005b838110156107d75781810151838201526020016107bf565b50506000910152565b600081518084526107f88160208601602086016107bc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60a08152600061083d60a08301886106e1565b7fffffffff000000000000000000000000000000000000000000000000000000008716602084015273ffffffffffffffffffffffffffffffffffffffff86166040840152846060840152828103608084015261089981856107e0565b98975050505050505050565b600082516108b78184602087016107bc565b9190910192915050565b6020815260006108d460208301846107e0565b9392505050565b60c0815260006108ee60c083018a6106e1565b7fffffffff000000000000000000000000000000000000000000000000000000008916602084015273ffffffffffffffffffffffffffffffffffffffff881660408401528660608401528281036080840152848152848660208301376000602086830101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601168101905060208382030160a084015261099560208201856107e0565b9a9950505050505050505050565b6000602082840312156109b557600080fd5b815167ffffffffffffffff808211156109cd57600080fd5b818401915084601f8301126109e157600080fd5b8151818111156109f3576109f36105ce565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610a3957610a396105ce565b81604052828152876020848701011115610a5257600080fd5b610a638360208301602088016107bc565b97965050505050505056fea264697066735822122063bfc19ac2728428e0959d10eeb0395ab4f74e8255ae10df67423332f09189f364736f6c63430008140033608060405234801561001057600080fd5b5060405161065d38038061065d83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610560806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100b0578063ad3cb1cc146100c3578063f2fde38b1461011957600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b50610074610139565b005b34801561008257600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100746100be366004610364565b61014d565b3480156100cf57600080fd5b5061010c6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100a791906104bc565b34801561012557600080fd5b506100746101343660046104d6565b6101e2565b61014161024b565b61014b600061029e565b565b61015561024b565b6040517f4f1ef28600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690634f1ef2869034906101ab90869086906004016104f3565b6000604051808303818588803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b5050505050505050565b6101ea61024b565b73ffffffffffffffffffffffffffffffffffffffff811661023f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6102488161029e565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461014b576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610236565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461024857600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561037957600080fd5b833561038481610313565b9250602084013561039481610313565b9150604084013567ffffffffffffffff808211156103b157600080fd5b818601915086601f8301126103c557600080fd5b8135818111156103d7576103d7610335565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561041d5761041d610335565b8160405282815289602084870101111561043657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b8181101561047e57602081850181015186830182015201610462565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006104cf6020830184610458565b9392505050565b6000602082840312156104e857600080fd5b81356104cf81610313565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006105226040830184610458565b94935050505056fea26469706673582212202f82823680f8e8d0a73e557362ecacae2350277f24e1ce3e12f8447ba65474f964736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";

type LayeredProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LayeredProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LayeredProxy__factory extends ContractFactory {
  constructor(...args: LayeredProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    layers: LibAccessLayers.LayerStructStruct[],
    initialImplementation: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LayeredProxy> {
    return super.deploy(
      initialOwner,
      layers,
      initialImplementation,
      overrides || {}
    ) as Promise<LayeredProxy>;
  }
  override getDeployTransaction(
    initialOwner: string,
    layers: LibAccessLayers.LayerStructStruct[],
    initialImplementation: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      layers,
      initialImplementation,
      overrides || {}
    );
  }
  override attach(address: string): LayeredProxy {
    return super.attach(address) as LayeredProxy;
  }
  override connect(signer: Signer): LayeredProxy__factory {
    return super.connect(signer) as LayeredProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LayeredProxyInterface {
    return new utils.Interface(_abi) as LayeredProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LayeredProxy {
    return new Contract(address, _abi, signerOrProvider) as LayeredProxy;
  }
}
